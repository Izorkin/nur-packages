diff --git a/sql/mysqld.cc b/sql/mysqld.cc
index fd39e25..e6175da 100644
--- a/sql/mysqld.cc
+++ b/sql/mysqld.cc
@@ -2097,6 +2097,10 @@ void close_connection(THD *thd, uint sql_errno)
 
   thd->disconnect();
 
+#ifdef HAVE_OPENSSL
+  ERR_remove_state(0);
+#endif
+
   MYSQL_CONNECTION_DONE((int) sql_errno, thd->thread_id);
 
   if (MYSQL_CONNECTION_DONE_ENABLED())
@@ -3785,6 +3789,9 @@ static void init_ssl()
     ssl_acceptor_fd= new_VioSSLAcceptorFd(opt_ssl_key, opt_ssl_cert,
 					  opt_ssl_ca, opt_ssl_capath,
 					  opt_ssl_cipher, &error);
+#ifdef HAVE_OPENSSL
+    ERR_remove_state(0);
+#endif
     DBUG_PRINT("info",("ssl_acceptor_fd: 0x%lx", (long) ssl_acceptor_fd));
     if (!ssl_acceptor_fd)
     {
diff --git a/sql/slave.cc b/sql/slave.cc
index e533bc0..3b610b5 100644
--- a/sql/slave.cc
+++ b/sql/slave.cc
@@ -3139,6 +3139,9 @@ err:
 
   DBUG_LEAVE;                                   // Must match DBUG_ENTER()
   my_thread_end();
+#ifdef HAVE_OPENSSL
+  ERR_remove_state(0);
+#endif
   pthread_exit(0);
   return 0;                                     // Avoid compiler warnings
 }
@@ -4302,8 +4305,8 @@ static int connect_to_master(THD* thd, MYSQL* mysql, Master_info* mi,
   mysql_options(mysql, MYSQL_SET_CHARSET_DIR, (char *) charsets_dir);
 
   /* Set MYSQL_PLUGIN_DIR in case master asks for an external authentication plugin */
-  if (opt_plugin_dir_ptr && *opt_plugin_dir_ptr)
-    mysql_options(mysql, MYSQL_PLUGIN_DIR, opt_plugin_dir_ptr);
+  if (opt_plugin_dir_ptr && *opt_plugin_dir_ptr)
+    mysql_options(mysql, MYSQL_PLUGIN_DIR, opt_plugin_dir_ptr);
 
   /* we disallow empty users */
   if (mi->user == NULL || mi->user[0] == 0)
diff --git a/vio/vio.c b/vio/vio.c
index b8bc7bd..c9d1955 100644
--- a/vio/vio.c
+++ b/vio/vio.c
@@ -287,5 +287,10 @@ void vio_end(void)
 {
 #ifdef HAVE_YASSL
   yaSSL_CleanUp();
+#elif defined(HAVE_OPENSSL)
+  ERR_remove_state(0);
+  ERR_free_strings();
+  EVP_cleanup();
+  CRYPTO_cleanup_all_ex_data();
 #endif
 }
